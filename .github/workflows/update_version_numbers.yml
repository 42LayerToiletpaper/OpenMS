name: Update OpenMS version numbers

# Trigger this action manually
on: push
  # workflow_dispatch:
  # workflow_run: # for testing
  #   workflows: [ "cppcheck-action-test" ]
  #   types:
  #     - completed

variables:
  package_version_major: 3
  package_version_minor: 0
  package_version_patch: 0
  package_version: "$version_major.$version_minor.$version_patch"


jobs:
  updating_package_version_number:
    runs-on: macos-latest
    steps:

# Update files with new package version numbers
      - name: update files
        run: |
          # update main cmakelist
          sed -i '' "s#.*set(OPENMS_PACKAGE_VERSION_MAJOR.*#set(OPENMS_PACKAGE_VERSION_MAJOR \"$package_version_major\")#" ./CMakeLists.txt
          sed -i '' "s#.*set(OPENMS_PACKAGE_VERSION_MINOR.*#set(OPENMS_PACKAGE_VERSION_MINOR \"$package_version_minor\")#" ./CMakeLists.txt
          sed -i '' "s#.*set(OPENMS_PACKAGE_VERSION_PATCH.*#set(OPENMS_PACKAGE_VERSION_PATCH \"$package_version_patch\")#" ./CMakeLists.txt

          # update version info test
          sed -i '' "s#.*detail.version_major =.*#\tdetail.version_major = $package_version_major;#" ./src/tests/class_tests/openms/source/VersionInfo_test.cpp
          sed -i '' "s#.*detail.version_minor =.*#\tdetail.version_major = $package_version_minor;#" ./src/tests/class_tests/openms/source/VersionInfo_test.cpp
          sed -i '' "s#.*detail.version_patch =.*#\tdetail.version_major = $package_version_patch;#" ./src/tests/class_tests/openms/source/VersionInfo_test.cpp

          # update test write ini out:
          sed -i '' "s#<ITEM name=\"version\" value=\".*\" type=\"string\"#<ITEM name=\"version\" value=\"$package_version\" type=\"string\"#g" ./src/tests/topp/WRITE_INI_OUT.ini

          # update INIs in tests topp:
          find ./src/tests/topp/ -type f -name '*.ini' -exec grep "<ITEM name=\"version\" value=\".*\" type=\"string\"" {} \; -exec sed -i '' "s#<ITEM name=\"version\" value=\".*\" type=\"string\"#<ITEM name=\"version\" value=\"$package_version\" type=\"string\"#g" {} \;

# Check for changes
      - name: check for changed files
        id: changed-files
        run: |
          if git diff --exit-code; then
            echo "::set-env name=changes_exist::false"
          else
            echo "::set-env name=changes_exist::true"
          fi

      - uses: actions/checkout@v3

# Commit and PR updated files
      - name: Commit and PR updated files
        if: env.changes_exist == 'true'
        uses: peter-evans/create-pull-request@v4
        with:
          commit-message: Updated OpenMS package version number
          committer: OpenMS <OpenMS@github.com>
          branch: update_package_number
          delete-branch: true
          title: '[ByGitAction] Updated OpenMS package version number'